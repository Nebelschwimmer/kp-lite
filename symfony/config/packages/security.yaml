security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        api_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure 
        # main:
        #     lazy: true
        #     provider: api_user_provider
        #     stateless: true
        api:
            pattern:   ^/api
            stateless: true
            entry_point: jwt
            jwt:
                provider: null
                authenticator: lexik_jwt_authentication.security.jwt_authenticator
            logout:
                path: api_token_invalidate
            refresh_jwt:
                check_path: /api/token/refresh # or, you may use the `api_refresh_token` route name
                # or if you have more than one user provider
                # provider: api_user_provider
    access_control:
        - { path: ^/api/(login|token/refresh), roles: PUBLIC_ACCESS }
        # - { path: ^/api/login, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
